{"version":3,"sources":["helpers/auth.js","components/forms/CharacterSubmit.js","helpers/helperFunctions.js","components/forms/BookSubmit.js","components/forms/users/Register.js","components/forms/users/Login.js","components/sitePages/Header.js","components/sitePages/HomePage.js","components/sitePages/Footer.js","components/users/Profile.js","components/books/BookCard3d.js","components/books/BookShow.js","components/books/BooksCarousel.js","components/books/BookIndex.js","components/characters/CharacterCard.js","components/characters/ProtagonistIndex.js","components/characters/AntagonistIndex.js","components/characters/SupportingCharacterIndex.js","components/genres/GenreIndex.js","App.js","index.js"],"names":["getPayloadFromToken","token","window","localStorage","getItem","parts","split","length","JSON","parse","atob","userIsAuthenticated","payload","Math","round","Date","now","exp","CharacterSubmit","characterType","useState","allArchetypes","setAllArchetypes","allBooks","setAllBooks","first_name","last_name","character_bio","character_archetypes","books","formData","setFormData","useEffect","a","axios","get","data","getArchetypes","getBooks","handleChange","event","target","value","name","newFormData","handleMultiChange","selected","values","map","item","handleSubmit","preventDefault","alert","stringify","post","bookOptions","book","id","label","title","archetypeOptions","trait","archetype","modalFormHeading","Form","onSubmit","Modal","Header","closeButton","Title","Body","Row","Col","Group","Label","Control","type","placeholder","required","onChange","Text","className","as","rows","options","components","makeAnimated","selection","handleSelectRelationship","isMulti","href","Footer","Button","variant","characterFormOptions","characterArray","character","firstName","lastName","setColourByNation","nation","dbc","document","body","classList","includes","console","log","remove","add","BookSubmit","isModal","author","cover_image","genre","is_made_into_film","is_made_into_series","page_count","published_by","pub_date","story_overview","supporting_characters","main_protagonist","main_antagonist","ISBN","allProtagonists","setAllProtagonists","allAntagonists","setAllAntagonists","allSupportingCharacters","setAllSupportingCharacters","allGenres","setAllGenres","pageNumber","setPageNumber","history","useHistory","getAntagonists","getProtagonists","getSupportingCharacters","getGenres","checked","response","postedBookID","push","handlePageTurnBookForm","page","parseInt","handleSingleSelect","disabled","Spinner","animation","role","aria-hidden","protagonistOptions","antagonistOptions","supportCharacterOptions","genreOptions","controlId","onClick","Check","Register","username","email","password","password_confirmation","nationality","setItem","handleSelect","Login","userID","sub","user","show","setShow","bookShow","setBookShow","loginShow","setLoginShow","registerShow","setRegisterShow","characterToSubmit","setCharacterToSubmit","handleShow","handleClose","Navbar","expand","Nav","Brand","Link","NavDropdown","Item","removeItem","location","reload","inline","FormControl","onHide","centered","HomePage","riddleAnswer","setRiddleAnswer","registerFormData","setRegisterFormData","handleSubmitRegister","handlePageTurn","handleRiddle","answer","entryPages","Card","to","Container","fluid","fixed","ListGroup","Profile","setUser","getUser","dateJoined","date_joined","BookCard3d","coverImage","src","alt","BookShow","bookID","useParams","singleBook","setSingleBook","getSingleBook","supChars","protag","antag","genres","isFilm","isSeries","synopsis","genreString","toString","supCharsString","style","width","BooksCarousel","BookIndex","setBooks","getData","CharacterCard","bio","relationship","relationship_to_protagonist","quote","Subtitle","ProtagonistIndex","CardColumns","AntagonistIndex","SupportingCharacterIndex","GenreIndex","sort","b","genreA","toUpperCase","genreB","filter","App","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.38232e4c.chunk.js","sourcesContent":["export const getTokenFromLocalStorage = () => {\n  return window.localStorage.getItem('token')\n}\n\nexport const getPayloadFromToken = () => {\n  const token = getTokenFromLocalStorage()\n  if (!token) return false\n  const parts = token.split('.')\n  if (parts.length < 3) return false\n  return JSON.parse(atob(parts[1]))\n}\n\nexport const userIsOwner = (userId) => {\n  const payload = getPayloadFromToken()\n  if (!payload) return false\n  return userId === payload.sub\n}\n\nexport const userIsAuthenticated = () => {\n  const payload = getPayloadFromToken()\n  if (!payload) return false\n  const now = Math.round(Date.now() / 1000)\n  return now < payload.exp\n}\n","\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\n\n// Bootstrap Imports\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Modal from 'react-bootstrap/Modal'\n\n\n\nconst CharacterSubmit = ({ characterType }) => {\n\n  //state variables\n  const [allArchetypes, setAllArchetypes] = useState(null)\n  const [allBooks, setAllBooks] = useState(null)\n  const [formData, setFormData] = useState({\n    // books and last name optional\n    first_name: '',\n    last_name: '',\n    character_bio: '',\n    //relationship fields, require get request\n    character_archetypes: [],\n    books: [],\n  })\n\n  useEffect(() => {\n    const getArchetypes = async () => {\n      const { data } = await axios.get('api/archetypes/')\n      setAllArchetypes(data)\n    }\n    getArchetypes()\n  }, [])\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const { data } = await axios.get('api/books/')\n      setAllBooks(data)\n    }\n    getBooks()\n  }, [])\n\n  const handleChange = (event) => {\n\n    const { value, name } = event.target\n    const newFormData = { ...formData, [name]: value }\n    setFormData(newFormData)\n  }\n\n  const handleMultiChange = (selected, name) => {\n    const values = selected ? selected.map(item => item.value) : []\n    setFormData({ ...formData, [name]: [...values] })\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    window.alert(JSON.stringify(formData, null, 2))\n    await axios.post(`/api/${characterType}/`, formData)\n\n  }\n\n  const handleSelectRelationship = (selected, name) => {\n    const selection = selected.value\n    setFormData({ ...formData, [name]: selection })\n  }\n\n  if (!allBooks || !allArchetypes) return null\n\n  const bookOptions = allBooks.map(book => {\n    const { id, title } = book\n    return { value: id , label: title }\n  })\n\n  const archetypeOptions = allArchetypes.map(trait => {\n    const { id, archetype } = trait\n    return { value: id , label: archetype }\n  })\n\n  const relationshipOptions = [\n    { value: 'Family Member', label: 'Family Member' },\n    { value: 'Rival', label: 'Rival' },\n    { value: 'Love Interest', label: 'Love Interest' },\n    { value: 'Friend', label: 'Friend' },\n    { value: 'Companion', label: 'Companion' },\n    { value: 'Ally', label: 'Ally' },\n    { value: 'Enemy', label: 'Enemy' },\n    { value: 'Servant', label: 'Servant' },\n    { value: 'Mentor', label: 'Mentor' }\n  ]\n\n  const modalFormHeading = characterType === 'supporting_characters' ?\n    'Create a New Supporting Character' :\n    characterType === 'antagonists' ?\n      'Create a New Antagonist' :\n      characterType === 'protagonists' ?\n        'Create a New Protagonist' : null\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title>{modalFormHeading}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Row>\n            <Col>\n              <Form.Group>\n                <Form.Label>First Name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"What is their first name\" required value={formData.first_name} name=\"first_name\" onChange={handleChange}/>\n                <Form.Text className=\"text-muted\">\n                  {'for a character with a title or one given name enter here. e.g \"Lord Voldemort\".'}\n                </Form.Text>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"What is their last name\" name=\"last_name\" value={formData.last_name} onChange={handleChange}/>\n                <Form.Text className=\"text-muted\">\n                  {'input user message'}\n                </Form.Text>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n\n          <Form.Group>\n            <Form.Label>Character Bio</Form.Label>\n            <Form.Control as=\"textarea\" rows ={5} placeholder=\"enter info about the character\" required name=\"character_bio\" value={formData.character_bio} onChange={handleChange}/>\n            <Form.Text className=\"text-muted\">\n              {'input user message'}\n            </Form.Text>\n          </Form.Group>\n\n          { characterType === 'supporting_characters' &&\n          <Form.Group>\n            <Form.Label>Relationship to Protagonist</Form.Label>\n            <Select\n              name=\"relationship_to_protagonist\"\n              options={relationshipOptions}\n              components={makeAnimated()}\n              onChange={(selected) => handleSelectRelationship(selected, 'relationship_to_protagonist')}\n            />\n          </Form.Group>\n          }\n\n          <Form.Group>\n            <Form.Label>Appears in</Form.Label>\n            <Select\n              name=\"books\"\n              options={bookOptions}\n              isMulti\n              components={makeAnimated()}\n              onChange={(selected) => handleMultiChange(selected, 'books')}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Character Archetypes</Form.Label>\n            <Form.Text className=\"text-muted\">\n            Check out {<a href=\"https://tvtropes.org/pmwiki/pmwiki.php/Main/NarrativeTropes\">TVTropes</a>} for an idea on what tropes to pick\n            </Form.Text>\n            <Select\n              name=\"character_archetypes\"\n              options={archetypeOptions}\n              isMulti\n              components={makeAnimated()}\n              onChange={(selected) => handleMultiChange(selected, 'character_archetypes')}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </>\n  )\n}\n\nexport default CharacterSubmit\n","import { userIsAuthenticated } from './auth'\n\nexport const characterFormOptions = (characterArray) => {\n  const options = characterArray.map(character => {\n    const { id, first_name: firstName, last_name: lastName  } = character\n    return { value: id , label: `${firstName} ${lastName}` }\n  })\n  return options\n}\nexport const genreFormOptions = (genreArray) => {\n  const options = genreArray.map(character => {\n    const { id, genre  } = character\n    return { value: id , label: genre }\n  })\n  return options\n}\n\nexport const setColourByNation = () => {\n  const nation = localStorage.getItem('nation')\n  // const isAcceptedNationClass = (nation === 'air')\n  // || (nation === 'water')\n  // || (nation === 'earth')\n  // || (nation === 'fire')\n  const dbc = document.body.classList\n\n  if (userIsAuthenticated()) {\n    if ([...dbc].includes('defaultMode')) {\n      console.log(true)\n      dbc.remove('defaultMode')\n      dbc.add(`${nation}Mode`)\n    }\n  }\n}","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\nimport { characterFormOptions, genreFormOptions } from '../../helpers/helperFunctions'\nimport { useHistory } from 'react-router'\nimport Modal from 'react-bootstrap/Modal'\n\nconst BookSubmit = ( { isModal }) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    author: '',\n    cover_image: '',\n    genre: [],\n    is_made_into_film: false,\n    is_made_into_series: false,\n    page_count: '',\n    published_by: '',\n    pub_date: '',\n    story_overview: '',\n    supporting_characters: [],\n    main_protagonist: [],\n    main_antagonist: [],\n    ISBN: '',\n  })\n\n  const [allProtagonists, setAllProtagonists] = useState(null)\n  const [allAntagonists, setAllAntagonists] = useState(null)\n  const [allSupportingCharacters, setAllSupportingCharacters] = useState(null)\n  const [allGenres, setAllGenres] = useState(null)\n  const [pageNumber, setPageNumber] = useState(0)\n\n  const history = useHistory()\n  useEffect(() => {\n    const getAntagonists = async () => {\n      const { data } = await axios.get('/api/antagonists/')\n      setAllAntagonists(data)\n    }\n    getAntagonists()\n  }, [])\n  useEffect(() => {\n    const getProtagonists = async () => {\n      const { data } = await axios.get('/api/protagonists/')\n      setAllProtagonists(data)\n    }\n    getProtagonists()\n  }, [])\n  useEffect(() => {\n    const getSupportingCharacters = async () => {\n      const { data } = await axios.get('/api/supporting_characters/')\n      setAllSupportingCharacters(data)\n    }\n    getSupportingCharacters()\n  }, [])\n  useEffect(() => {\n    const getGenres = async () => {\n      const { data } = await axios.get('/api/genres/')\n      setAllGenres(data)\n    }\n    getGenres()\n  }, [])\n\n  const handleChange = (event) => {\n    const { type, name, checked, value } = event.target\n    const values = type === 'checkbox'\n      ? checked\n      : value\n    setFormData({ ...formData, [name]: values })\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    if (formData.cover_image === '' || formData.cover_image === ' ') {\n      formData.cover_image = 'https://cdn.wallpapersafari.com/35/57/iUfZRE.jpg'\n    }\n    window.alert(JSON.stringify(formData, null, 2))\n    const response = await axios.post('/api/books/', formData)\n    const postedBookID = response.data.id\n    history.push(`/books/${postedBookID}`)\n\n  }\n  const handlePageTurnBookForm = (event) => {\n    const { value } = event.target\n    const page = parseInt(value)\n    setPageNumber(page)\n  }\n  const handleSingleSelect = (selected, name) => {\n    const selection = selected.value\n    setFormData({ ...formData, [name]: selection })\n  }\n  const handleMultiChange = (selected, name) => {\n    const values = selected ? selected.map(item => item.value) : []\n    setFormData({ ...formData, [name]: [...values] })\n  }\n\n  //character select options\n\n\n  if (!allAntagonists || !allProtagonists || !allSupportingCharacters || !allGenres) return (\n\n    <Button disabled>\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    Loading...\n    </Button>\n  )\n  const protagonistOptions = characterFormOptions(allProtagonists)\n  const antagonistOptions = characterFormOptions(allAntagonists)\n  const supportCharacterOptions = characterFormOptions(allSupportingCharacters)\n  const genreOptions = genreFormOptions(allGenres)\n\n  return (\n\n    <Form onSubmit={handleSubmit}>\n      {isModal &&\n        <Modal.Header closeButton>\n          <Modal.Title>Create a New Book</Modal.Title>\n        </Modal.Header>\n      }\n      { pageNumber === 0 &&\n          <>\n            <Form.Group controlId=\"bookFormPartOne\">\n              <Form.Row>\n                <Col>\n                  <Form.Group controlId=\"formBookTitle\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Book Title\" required name=\"title\" value={formData.title}onChange={handleChange}/>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId=\"forBookAuthor\">\n                    <Form.Label>Author</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Author name\" name=\"author\"  onChange={handleChange} value={formData.author}/>\n                    <Form.Text className=\"text-muted\">\n                      {'Avoid punctuation e.g instead of \"J.K. Rowling\", enter \"JK Rowling\"'}\n                    </Form.Text>\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Form.Group controlId=\"formCharacterBioProtagonist\">\n              <Form.Label>Synopsis</Form.Label>\n              <Form.Control as=\"textarea\" rows ={4} placeholder=\"enter info about the story\" value={formData.story_overview} name=\"story_overview\" required onChange={handleChange}/>\n              <Form.Text className=\"text-muted\">\n                {'Max length 2000 characters'}\n              </Form.Text>\n              <Form.Label>Select Genre</Form.Label>\n\n              <Select\n                name=\"genre\"\n                options={genreOptions}\n                isMulti\n                components={makeAnimated()}\n                onChange={(selected) => handleMultiChange(selected, 'genre')}\n              />\n              <Form.Text className=\"text-muted\">\n                {'Select all/any genres that apply'}\n              </Form.Text>\n              <Button value=\"1\" onClick={handlePageTurnBookForm}>Move to next page</Button>\n\n            </Form.Group>\n          </>\n      }\n\n      {/** end of required forms i.e part one of form\n         * cover_image: '',\n          genre: [],\n          published_by: '',\n          pub_date: '',\n          story_overview: '',\n        */}\n      { pageNumber === 1 &&\n          <>\n            <Form.Group controlId=\"filmSeriesPages\">\n              <Form.Row>\n                <Col>\n                  <Form.Check\n                    name=\"is_made_into_film\"\n                    label=\"Has it been made into a Film?\"\n                    checked={formData.is_made_into_film}\n                    onChange={handleChange}\n                  />\n                </Col>\n                <Col>\n                  <Form.Check\n                    name=\"is_made_into_series\"\n                    label=\"Has it been made into a Series?\"\n                    checked={formData.is_made_into_series}\n                    onChange={handleChange}/>\n                </Col>\n                <Col>\n                  <Form.Label>Number of Pages</Form.Label>\n                  <Form.Control type=\"number\" name=\"page_count\" value={formData.page_count} label=\"No. Pages\" onChange={handleChange}/>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Form.Group controlId=\"publisherInfo\">\n              <Form.Row>\n                <Col>\n                  <Form.Label>Publisher</Form.Label>\n                  <Form.Control type=\"text\" value={formData.published_by} placeholder=\"enter publisher\" name=\"published_by\" onChange={handleChange}/>\n                </Col>\n                <Col>\n                  <Form.Label>Date Published</Form.Label>\n                  <Form.Control type=\"date\" name=\"pub_date\" value={formData.pub_date} onChange={handleChange} />\n                  <Form.Text className=\"text-muted\">\n                    {'If the exact date is unknown, you can put the 1st of the month instead.'}\n                  </Form.Text>\n                </Col>\n                <Col>\n                  <Form.Label>Book Cover</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"url link\" name=\"cover_image\" value={formData.cover_image} onChange={handleChange} />\n                  <Form.Text className=\"text-muted\">\n                    {'Enter URL link for cover image, or leave blank for a default'}\n                  </Form.Text>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>ISBN</Form.Label>\n              <Form.Control type=\"text\" value={formData.ISBN} placeholder=\"enter ISBN\" name=\"ISBN\" onChange={handleChange}/>\n              <Form.Text className=\"text-muted\">\n                {'Enter in format \"978-3-16-148410-0\"'}\n              </Form.Text>\n            </Form.Group>\n            { isModal ?\n              <Modal.Footer>\n                <Button value=\"2\" onClick={handlePageTurnBookForm}>Move to final page</Button>\n                <Button value=\"0\" onClick={handlePageTurnBookForm}>Go Back</Button>\n              </Modal.Footer>\n              :\n              <Form.Group>\n                <Button value=\"2\" onClick={handlePageTurnBookForm}>Move to final page</Button>\n                <Button value=\"0\" onClick={handlePageTurnBookForm}>Go Back</Button>\n              </Form.Group>\n\n            }\n          </>\n\n      }\n      { pageNumber === 2 &&\n\n          <>\n            <Form.Group>\n              <Form.Label>Select Protagonist</Form.Label>\n\n              <Select\n                name=\"protagonists\"\n                options={protagonistOptions}\n                components={makeAnimated()}\n                onChange={(selected) => handleSingleSelect(selected, 'protagonists')}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Select Antagonist</Form.Label>\n              <Select\n                name=\"antagonists\"\n                options={antagonistOptions}\n                components={makeAnimated()}\n                onChange={(selected) => handleSingleSelect(selected, 'antagonists')}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Select Supporting Characters</Form.Label>\n              <Select\n                name=\"supporting_characters\"\n                options={supportCharacterOptions}\n                isMulti\n                components={makeAnimated()}\n                onChange={(selected) => handleMultiChange(selected, 'supporting_characters')}\n              />\n            </Form.Group>\n            <Form.Text className=\"text-muted\">\n              {'You can select multiple supporting characters'}\n            </Form.Text>\n            { isModal ?\n\n              <Modal.Footer>\n                <Button variant=\"primary\" type=\"submit\">\n              Submit\n                </Button>\n                <Button value=\"1\" onClick={handlePageTurnBookForm}>Go Back</Button>\n                <Form.Text className=\"text-muted\">\n                  {'If a character doesn\\'t exist, don\\'t worry! You can add them to the book later '}\n                </Form.Text>\n              </Modal.Footer>\n              :\n              <Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n              Submit\n                </Button>\n                <Button value=\"1\" onClick={handlePageTurnBookForm}>Go Back</Button>\n                <Form.Text className=\"text-muted\">\n                  {'If a character doesn\\'t exist, don\\'t worry! You can add them to the book later '}\n                </Form.Text>\n              </Form.Group>\n            }\n\n          </>\n      }\n    </Form>\n\n  )\n}\n\nexport default BookSubmit\n","import axios from 'axios'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\nimport Modal from 'react-bootstrap/Modal'\n\n\n\nconst Register = () => {\n  const history = useHistory()\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password_confirmation: '',\n    nationality: '',\n  })\n\n  const handleChange = (event) => {\n    const newFormData = { ...formData, [event.target.name]: event.target.value }\n    setFormData(newFormData)\n  }\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', formData)\n      history.push('/login')\n      localStorage.setItem('nation', formData.nationality )\n    } catch (err) {\n      console.log(err.response)\n    }\n  }\n  const nationalityOptions = [\n    { value: 'fire', label: 'Fire Nation' },\n    { value: 'earth', label: 'Earth Kingdom' },\n    { value: 'air', label: 'Air Nomads' },\n    { value: 'water', label: 'Water Tribes' }\n  ]\n\n  const handleSelect = (selected, name) => {\n    const selection = selected.value\n    setFormData({ ...formData, [name]: selection })\n  }\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header>\n          <Modal.Title>Register Form</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Label>Username</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"enter your username\" name=\"username\" value={formData.value} onChange={handleChange} required/>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"enter your email\" name=\"email\"  onChange={handleChange} required/>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"enter your password\" name=\"password\"  onChange={handleChange} required/>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Nation</Form.Label>\n            <Select\n              name=\"nationality\"\n              options={nationalityOptions}\n              components={makeAnimated()}\n              onChange={(selected) => handleSelect(selected, 'nationality')}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"re-enter your password\" name=\"password_confirmation\"  onChange={handleChange} required/>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"submit\">Register</Button>\n        </Modal.Footer>\n\n      </Form>\n    </>\n  )\n}\n\nexport default Register\n","import axios from 'axios'\nimport React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport  Form  from 'react-bootstrap/Form'\nimport { useHistory } from 'react-router'\nimport { getPayloadFromToken } from '../../../helpers/auth'\nimport Button  from 'react-bootstrap/Button'\nimport { setColourByNation } from '../../../helpers/helperFunctions'\n\n\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  })\n  const history = useHistory()\n  const handleChange = (event) => {\n    const newFormData = { ...formData, [event.target.name]: event.target.value }\n    setFormData(newFormData)\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const response = await axios.post('/api/auth/login/', formData)\n    window.localStorage.setItem('token', response.data.token)\n    const userID = getPayloadFromToken().sub\n    const { data: user } = await axios.get(`api/auth/user/${userID}/`)\n\n    localStorage.setItem('nation', user.nationality)\n    setColourByNation()\n    history.push('/books/')\n  }\n\n  return (\n    <>\n      <Form className=\"login-box\" onSubmit={handleSubmit}>\n        <Modal.Header>\n          <Modal.Title>Login Form</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Control\n              className=\"login-input\"\n              placeholder=\"Email\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formData.email}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              onChange={handleChange}\n              className=\"login-input\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={formData.password}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer className=\"field\">\n          <Button type=\"submit\">\n            Log In\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { userIsAuthenticated } from '../../helpers/auth'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\n\nimport CharacterSubmit from '../forms/CharacterSubmit'\nimport BookSubmit from '../forms/BookSubmit'\nimport Register from '../forms/users/Register'\nimport Login from '../forms/users/Login'\n\n\n\nconst Header = () => {\n  const history = useHistory()\n  const handleLogout = () => {\n    window.localStorage.removeItem('token')\n    window.localStorage.removeItem('nation')\n    window.alert('you have logged out, returning to homepage')\n    history.push('/')\n    window.location.reload()\n  }\n  const [show, setShow] = useState(false)\n  const [bookShow, setBookShow] = useState(false)\n  const [loginShow, setLoginShow] = useState(false)\n  const [registerShow, setRegisterShow] = useState(false)\n  const [characterToSubmit, setCharacterToSubmit] = useState('')\n\n  const handleShow = (event) => {\n    const { name } = event.target\n    if (name === 'book') {\n      setBookShow(true)\n    } else if (name === 'login') {\n      setLoginShow(true)\n    } else if (name === 'register') {\n      setRegisterShow(true)\n    } else {\n      setShow(true)\n      setCharacterToSubmit(name)\n    }\n  }\n  const handleClose = () => {\n    setShow(false)\n    setBookShow(false)\n    setLoginShow(false)\n    setRegisterShow(false)\n  }\n  return (\n    <>\n      <Navbar expand=\"xl\" className=\"navbar background\">\n        <Nav className=\"mr=auto\">\n          <Navbar.Brand className=\"nav-element secondary\" href=\"/\">Home</Navbar.Brand>\n          <Nav.Link className=\"nav-element secondary\" href=\"/books\">Books</Nav.Link>\n          <Nav.Link className=\"nav-element secondary\" href=\"/genres\">Genres</Nav.Link>\n          <Nav.Link className=\"nav-element secondary\" href=\"/protagonists\">Protagonists</Nav.Link>\n          <Nav.Link className=\"nav-element secondary\" href=\"/antagonists\">Antagonists</Nav.Link>\n          <Nav.Link className=\"nav-element secondary\" href=\"/supporting_characters\">Supporting Characters</Nav.Link>\n          {\n            userIsAuthenticated() &&\n            <>\n              <Nav.Link className=\"nav-element secondary\" href=\"/search\">Search</Nav.Link>\n              <NavDropdown className=\"nav-element secondary\" title=\"Forms\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item  className=\"primary\" onClick={handleShow} name=\"protagonists\">Submit a Protagonist</NavDropdown.Item>\n                <NavDropdown.Item className=\"secondary\" onClick={handleShow} name=\"antagonists\">Submit a Antagonist</NavDropdown.Item>\n                <NavDropdown.Item className=\"primary\" onClick={handleShow} name=\"supporting_characters\">Submit a Supporting Character</NavDropdown.Item>\n                <NavDropdown.Item className=\"secondary\" name=\"book\" onClick={handleShow}>Submit a book</NavDropdown.Item>\n\n              </NavDropdown>\n              <Nav.Link className=\"nav-element secondary\" href=\"/profile\">Profile</Nav.Link>\n              <Button className=\"nav-element  secondary\" onClick={handleLogout}>Logout</Button>\n              {/* <Button className=\"nav-element secondary\" type=\"toggle\" onClick={handleNationChange}  name=\"toggle\" data-toggle=\"toggle\" data-on=\"Nation\" data-off=\"Default\"></Button> */}\n            </>\n          }\n          {\n            !userIsAuthenticated() &&\n        <>\n          <Nav.Link className=\"nav-element secondary\" onClick={handleShow} name=\"login\">Log In</Nav.Link>\n          <Nav.Link className=\"nav-element secondary\" onClick={handleShow} name=\"register\">Register</Nav.Link>\n\n        </>\n          }\n          <Form className='form-styling ' inline>\n            <FormControl type=\"text\" placeholder=\"Search for a Book\" className=\" mr-sm-2\" />\n            <Button type=\"submit\">Submit</Button>\n          </Form>\n        </Nav>\n      </Navbar>\n      <Modal show={show} onHide={handleClose} centered>\n        <CharacterSubmit characterType={characterToSubmit}/>\n      </Modal>\n      <Modal show={bookShow} onHide={handleClose} centered>\n        <BookSubmit isModal={true}/>\n      </Modal>\n      <Modal show={registerShow} onHide={handleClose} centered>\n        <Register/>\n      </Modal>\n      <Modal show={loginShow} onHide={handleClose} centered>\n        <Login/>\n      </Modal>\n    </>\n  )\n}\n\nexport default Header\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\n\nimport BookSubmit from '../forms/BookSubmit'\nimport Login from '../forms/users/Login'\n\n\n\nconst HomePage = () => {\n  const [pageNumber, setPageNumber] = useState(0)\n  const [riddleAnswer, setRiddleAnswer] = useState(0)\n  const [registerFormData, setRegisterFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password_confirmation: '',\n    nationality: '',\n  })\n\n  const handleChange = (event) => {\n    const newFormData = { ...registerFormData, [event.target.name]: event.target.value }\n    setRegisterFormData(newFormData)\n  }\n  const handleSubmitRegister = async (event) => {\n    event.preventDefault()\n    window.alert(JSON.stringify(registerFormData, null, 2))\n    handlePageTurn(event)\n    try {\n      await axios.post('/api/auth/register/', registerFormData)\n    } catch (err) {\n      console.log(err.response)\n    }\n  }\n  const nationalityOptions = [\n    { value: 'fire', label: 'Fire Nation' },\n    { value: 'earth', label: 'Earth Kingdom' },\n    { value: 'air', label: 'Air Nomads' },\n    { value: 'water', label: 'Water Tribes' }\n  ]\n\n  const handleSelect = (selected, name) => {\n    const selection = selected.value\n    setRegisterFormData({ ...registerFormData, [name]: selection })\n  }\n\n  const handlePageTurn = (event) => {\n    const { value } = event.target\n    const page = parseInt(value)\n    setPageNumber(page)\n  }\n  const handleRiddle = (event) => {\n    const { value } = event.target\n    const answer = parseInt(value)\n    setRiddleAnswer(answer)\n  }\n\n  const entryPages = [4,7,8,9]\n  return (\n    <Card className='trim'>\n      <div className=\"homepage-container secondary\">\n        <div className=\"homepage-container-sections-left\">\n          <div className=\"homepage-wan-shi-image\">\n          </div>\n          <div className=\"homepage-text\">\n\n            { pageNumber === 0 &&\n                <>\n                  <p>\n                    Welcome, Humans, to my Library. I am Wan Shi Tong, He who Knows Ten Thousand Things\n                  </p>\n                  <p>\n                To enter my library you must prove your worth as scholars\n                  </p>\n                </>\n            }\n            { pageNumber === 1 &&\n              <>\n                <p>A Book you say? My Knowledge Seekers are quite thorough, I doubt you possess something they have not found...</p>\n                <p>Very well I will se your book, though I am not expecting much. Oh, I suppose I should ask who you are...</p>\n              </>\n            }\n            { pageNumber === 2 &&\n              <>\n                <p>Hmm... that does not sound like an actual name...</p>\n                <p>Nevermind, what nation are you from?</p>\n              </>\n            }\n            { pageNumber === 3 &&\n              <>\n                <p>So that Book you have, tell me about it</p>\n\n              </>\n            }\n            { pageNumber === 4 || pageNumber === 7 &&\n              <>\n                <p>I suppose that will do...</p>\n                <p> You may enter\n                  { pageNumber === 7 &&\n                  <>\n                  , however you will receive no assistance until you tell me who you are\n                  </>\n                  }\n                </p>\n              </>\n            }\n            { pageNumber === 5 &&\n              <>\n                <p>Forgive me, you all look so alike</p>\n                <p>Who are you again?</p>\n\n              </>\n            }\n            { pageNumber === 6 && riddleAnswer === 0 &&\n              <>\n                <p>You wish to show your knowledge?</p>\n                <p>Very well, riddle me this</p>\n                <p>I make two people out of one, what am I ?</p>\n\n              </>\n\n            }\n            { riddleAnswer === 1 ?\n              <>\n                <p>Your not very smart, are you?</p>\n              </>\n              : riddleAnswer === 2 ?\n                <>\n                  <p>No.</p>\n                </>\n                : riddleAnswer === 3 ?\n                  <>\n                    <p>*Sigh*</p>\n                  </>\n                  : null\n\n            }\n            { entryPages.includes(pageNumber) &&\n                <>\n\n                  { pageNumber !== 4 &&\n                    <p>\n                      {'If you\\'re going to'}\n                      {pageNumber === 9 ? <> lie to </> : <> try to sneak past </> }\n                      <>\n                      an All-Knowing spirit being, you should should at least put some effort into it\n                      </>\n                    </p>\n                  }\n\n\n                  <p>*Sigh... you may enter</p>\n\n                  { pageNumber !== 4 &&\n                    <p>However, you will receive no assistance until you tell me who you are</p>\n                  }\n\n                </>\n            }\n\n          </div>\n        </div>\n        <div className=\"homepage-container-sections-right\">\n          { pageNumber === 0 &&\n              <>\n\n                <Button className= \"page-zero-button primary\" onClick={handlePageTurn} value=\"1\">Provide a book to the Library</Button>\n                <Button className= \"page-zero-button primary\" onClick={handlePageTurn} value=\"6\">Prove your Knowledge by Answering a Riddle</Button>\n                <Button className= \"page-zero-button primary\" onClick={handlePageTurn} value=\"8\">Sneak into the Library</Button>\n                <Button className= \"page-zero-button primary\" onClick={handlePageTurn} value=\"5\"> {'I\\'ve been here before!!'}</Button>\n\n              </>\n          }\n          { pageNumber === 1 &&\n              <>\n                <div className=\"homepage-container-sections\">\n\n                  <Form>\n                    <Form.Group>\n                      <Form.Label>Username</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"enter your username\" name=\"username\" value={registerFormData.username} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Email</Form.Label>\n                      <Form.Control type=\"email\" placeholder=\"enter your email\" name=\"email\"  value={registerFormData.email} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Nation</Form.Label>\n                      <Select\n                        name=\"nationality\"\n                        options={nationalityOptions}\n                        components={makeAnimated()}\n                        onChange={(selected) => handleSelect(selected, 'nationality')}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control type=\"password\" placeholder=\"enter your password\" name=\"password\"  value={registerFormData.password} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Password Confirmation</Form.Label>\n                      <Form.Control type=\"password\" placeholder=\"re-enter your password\" name=\"password_confirmation\" value={registerFormData.password_confirmation}  onChange={handleChange} required/>\n                      <Button onClick={handleSubmitRegister} value=\"3\">Answer his questions</Button>\n                      <p>OR...</p>\n                      <Button onClick={handlePageTurn} value=\"8\" >sneak into the library</Button>\n                    </Form.Group>\n                  </Form>\n\n                </div>\n              </>\n          }\n\n          { pageNumber === 2 &&\n            <div className=\"homepage-container-sections\">\n              <Button value=\"3\"onClick={handlePageTurn}>Water Tribe</Button>\n              <Button value=\"3\"onClick={handlePageTurn}>Earth Kingdom</Button>\n              <Button value=\"3\"onClick={handlePageTurn}>Fire Nation</Button>\n              <Button value=\"3\"onClick={handlePageTurn}>Air Nomad</Button>\n            </div>\n          }\n          { pageNumber === 3 &&\n            <>\n              <div className=\"homepage-container-sections\">\n                <BookSubmit isModal={false}/>\n              </div>\n              <div className=\"homepage-container-sections buttons-page-0\">\n                <Button onClick={handlePageTurn} value=\"4\">Tell him you will talk about it inside after you have settled inside</Button>\n              </div>\n            </>\n          }\n          { entryPages.includes(pageNumber) &&\n            <>\n\n              <div className=\"homepage-container-sections enter-library\">\n                <Link to=\"/books/\"><Button>Enter the Library</Button></Link>\n              </div>\n            </>\n          }\n          { pageNumber === 5 &&\n            <>\n\n              <div className=\"homepage-container-sections\">\n                <Login/>\n              </div>\n            </>\n          }\n          { pageNumber === 6 &&\n            <>\n              <div className=\"homepage-container-sections riddle-buttons\">\n                <Button value=\"1\" onClick={handleRiddle}>A Surgeon</Button>\n                <Button value=\"2\" onClick={handleRiddle}>A Magician</Button>\n                <Button value=\"3\" onClick={handleRiddle}>A Identity Thief</Button>\n                <Button value=\"7\" onClick={handlePageTurn}>A Mirror</Button>\n              </div>\n              <div className=\"homepage-container-sections\">\n                <Button onClick={handlePageTurn} value=\"1\">Give him a book instead</Button>\n                <Button onClick={handlePageTurn} value=\"9\">Make up an elaborate lie to get into the library for nothing</Button>\n\n              </div>\n            </>\n\n          }\n        </div>\n      </div>\n    </Card>\n\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nconst Footer = () => {\n  return (\n    <Container fluid className='background' fixed=\"bottom\">\n      <ListGroup>\n        <ListGroup.Item className='primary'>\n          Website created by Jesse Edwards and George Shaw\n        </ListGroup.Item>\n      </ListGroup>\n    </Container>\n  )\n}\n\nexport default Footer\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { getPayloadFromToken } from '../../helpers/auth'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { setColourByNation } from '../../helpers/helperFunctions'\n\nconst Profile = () => {\n  const [user, setUser] = useState(null)\n  const userID = getPayloadFromToken().sub\n  useEffect(() => {\n    const getUser = async () => {\n      const { data } = await axios.get(`api/auth/user/${userID}/`)\n      setUser(data)\n      setColourByNation()\n    }\n    getUser()\n  },[userID])\n\n  if (!user) return (\n    <Button disabled>\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    Loading...\n    </Button>\n  )\n  const { username, email, date_joined: dateJoined, nationality } = user\n  return (\n    <>\n      <h1 className='character-header'>User Profile Page</h1>\n      <div className=\"profile-container\">\n        <div className=\"profile-info-left\"><div className=\"profile-image\"></div></div>\n        <div className=\"profile-info-right\">\n          <div className=\"profile-info-right-sections\">\n            <h3 className='profile-h3-right'>Username: {username}</h3>\n          </div>\n          <div className=\"profile-info-right-sections\">\n            <h3 className='profile-h3-right'>Email: {email}</h3>\n          </div>\n          <div className=\"profile-info-right-sections\">\n            <h3 className='profile-h3-right'>Member Since: {dateJoined}</h3>\n          </div>\n          <div className=\"profile-info-right-sections\">\n            <h3 className='profile-h3-right'> Nation: {nationality}</h3>\n          </div>\n        </div>\n      </div>\n    </>\n\n\n  )\n}\n\nexport default Profile\n","import React from 'react'\n\nconst BookCard3d = ({ book }) => {\n\n  const { title, author, cover_image: coverImage } = book\n\n  return (\n    <>\n      <main>\n\n        <div className=\"book-card__cover\">\n          <div className=\"book-card__book\">\n            <div className=\"book-card__book-front\">\n              <img className=\"book-card__img\" src={coverImage} alt={`the cover for ${title}, by ${author}`}/>\n            </div>\n            <div className=\"book-card__book-back\"></div>\n            <div className=\"book-card__book-side\"></div>\n          </div>\n        </div>\n\n      </main>\n    </>\n  )\n}\n\nexport default BookCard3d\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport BookCard3d from './BookCard3d'\nimport Card from 'react-bootstrap/Card'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport { setColourByNation } from '../../helpers/helperFunctions'\n\nconst BookShow = () => {\n  setColourByNation()\n  const { id: bookID } = useParams()\n  const [singleBook, setSingleBook] = useState(null)\n\n  useEffect(() => {\n    const getSingleBook = async () => {\n      const { data } = await axios.get(`/api/books/${bookID}`)\n      setSingleBook(data)\n    }\n    getSingleBook()\n  },[bookID])\n\n  if (!singleBook) return null\n\n  const { supporting_characters: supChars, main_protagonist: protag, main_antagonist: antag, genre: genres, title, author, is_made_into_film: isFilm, is_made_into_series: isSeries, story_overview: synopsis } = singleBook\n\n  const genreString = genres.map(item => ` ${item.genre}`).toString()\n  const supCharsString = supChars.map(item => ` ${item.first_name} ${item.last_name}`).toString()\n\n  return (\n    <div className=\"book-show-card-container\">\n      <Card className=\"book-show-card\" style={{ width: '40rem' }}>\n        <Card.Body>\n          <Card.Title>{`${title}, by ${author}`}</Card.Title>\n        </Card.Body>\n        <Row>\n          <Col className=\"book-show-info-left book-card\">\n            <BookCard3d book={singleBook}/>\n          </Col>\n        </Row>\n        <Row>\n          <Col>Book Title</Col>\n          <Col>{title}</Col>\n\n        </Row>\n        <Row>\n          <Col>Author</Col>\n          <Col><a href={`https://en.wikipedia.org/wiki/${author}`}>\n            {author}\n          </a></Col>\n        </Row>\n        <Row>\n          <Col>Synopsis</Col>\n          <Col>\n            <p>{synopsis}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col>Protagonist</Col>\n          <Col>\n            {\n              protag.length > 0 &&\n\n                <p>{`${protag[0].first_name} ${protag[0].last_name}`}</p>\n            }\n          </Col>\n        </Row>\n        <Row>\n          <Col>Antagonist</Col>\n          <Col>\n            {\n              antag.length > 0 &&\n\n                <p>{`${antag[0].first_name} ${antag[0].last_name}`}</p>\n            }\n          </Col>\n        </Row>\n        <Row>\n          <Col>Supporting Characters</Col>\n          <Col>\n            <p>{supCharsString}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col>Genre</Col>\n          <Col>{genreString}</Col>\n        </Row>\n        <Row>\n          <Col>Has it Been Made Into a Film?</Col>\n          <Col>\n            {isFilm ? 'Yes' : 'No'}\n          </Col>\n        </Row>\n        <Row>\n          <Col>Has it Been Made into a Series</Col>\n          <Col>\n            {isSeries ? 'Yes' : 'No'}\n          </Col>\n        </Row>\n        <Row>\n          <Col>Publisher</Col>\n          <Col></Col>\n        </Row>\n\n        <Row>\n          <Col>Publication Date</Col>\n          <Col></Col>\n        </Row>\n        <Row>\n          <Col>ISBN</Col>\n          <Col></Col>\n        </Row>\n        <Row>\n          <Col>Number of Pages</Col>\n          <Col></Col>\n        </Row>\n\n        <Card.Body>\n          <Container>\n\n          </Container>\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n\nexport default BookShow\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nconst BooksCarousel = ( { books } ) => {\n\n  return (\n\n\n    <>\n      {books.map(book => {\n        const { title, author, cover_image: coverImage, id } = book\n\n        return (\n          <Link className=\"book-link\" key={id} to={`/books/${id}`}>\n            <li className='book' >\n              <img src={coverImage} alt={`the cover for ${title}, by ${author}`} />\n            </li>\n          </Link>\n        )\n      })}\n    </>\n\n  )\n\n\n}\n\nexport default BooksCarousel\n","import React, { useState, useEffect } from 'react'\nimport BooksCarousel from './BooksCarousel'\nimport axios from 'axios'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { setColourByNation } from '../../helpers/helperFunctions'\n\n\nexport const BookIndex = () => {\n  const [books, setBooks] = useState(null)\n\n\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get('/api/books/')\n      setBooks(data)\n    }\n    getData()\n    setColourByNation()\n\n  }, [])\n\n  if (!books) return (\n    <Button disabled>\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    Loading...\n    </Button>\n  )\n\n  return (\n    <>\n      {/* { books.map( book => {\n        return (\n          <div key = {book.id} >\n            <BookCard3d  book={book} />\n          </div>\n        )\n      })} */}\n      <ul className=\"books-index-container background\">\n        <BooksCarousel books={books} />\n      </ul>\n    </>\n  )\n}\nexport default BookIndex","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nconst CharacterCard = ({ character }) => {\n\n\n  const { books, first_name: firstName, last_name: lastName, character_bio: bio, relationship_to_protagonist: relationship, quote } = character\n\n  return (\n    <Card className='character-card background' style={{ width: 'auto' }}>\n      <Card.Header className='secondary'>{`${firstName} ${lastName}`}</Card.Header>\n      <Card.Body className='trim' >\n        <Card.Title></Card.Title>\n        {relationship &&\n        <>\n          <Card.Subtitle className=\"mb-2 text-muted\">Relationship to Protagonist</Card.Subtitle>\n          <Card.Text>{relationship}</Card.Text>\n        </>\n        }\n        {quote &&\n        <>\n          <Card.Subtitle className=\"mb-2 text-muted\">Memorable Quote:</Card.Subtitle>\n          <Card.Text>{`\"${quote}\"`}</Card.Text>\n        </>\n        }\n\n        <Card.Text>\n          {bio}\n        </Card.Text>\n\n      </Card.Body>\n\n      <Card.Footer className='secondary'>\n        {'Appears In: '}\n\n        {books.map(book => {\n          const { title, id } = book\n          return (\n            <Card.Link key={id} href={`/books/${id}`}>{title}</Card.Link>\n          )\n        })\n        }\n\n\n      </Card.Footer>\n    </Card>\n\n\n  )\n}\n\nexport default CharacterCard\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport CharacterCard from './CharacterCard'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport { setColourByNation } from '../../helpers/helperFunctions'\n\n\n\nconst ProtagonistIndex = () => {\n  setColourByNation()\n  const [allProtagonists, setAllProtagonists] = useState(null)\n  useEffect(() => {\n    const getProtagonists = async () => {\n      const { data } = await axios.get('/api/protagonists/')\n      setAllProtagonists(data)\n    }\n    getProtagonists()\n  }, [])\n\n\n  if (!allProtagonists) return (\n    <Button disabled>\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    Loading...\n    </Button>\n  )\n  return (\n    <>\n      <h1 className='character-header background'>Protagonists</h1>\n      <CardColumns className='background'>\n        {allProtagonists.map(character => {\n          return (\n            <CharacterCard characterType='protagonist' key={character.id} character={character} />\n          )\n        })}\n      </CardColumns>\n\n    </>\n\n  )\n}\n\nexport default ProtagonistIndex\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport CharacterCard from './CharacterCard'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport { setColourByNation } from '../../helpers/helperFunctions'\n\n\n\nconst AntagonistIndex = () => {\n  setColourByNation()\n  const [allAntagonists, setAllAntagonists] = useState(null)\n\n  useEffect(() => {\n    const getAntagonists = async () => {\n      const { data } = await axios.get('/api/antagonists/')\n      setAllAntagonists(data)\n    }\n    getAntagonists()\n  }, [])\n\n\n  if (!allAntagonists) return (\n    <Button disabled>\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    Loading...\n    </Button>\n  )\n  return (\n    <>\n      <h1 className='character-header background'>Antagonists</h1>\n      <CardColumns className='background'>\n        {allAntagonists.map(character => {\n          return (\n            <CharacterCard characterType='protagonist' key={character.id} character={character} />\n          )\n        })}\n      </CardColumns>\n\n    </>\n  )\n}\n\nexport default AntagonistIndex\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport CharacterCard from './CharacterCard'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport { setColourByNation } from '../../helpers/helperFunctions'\n\n\nconst SupportingCharacterIndex = () => {\n  setColourByNation()\n  const [allSupportingCharacters, setAllSupportingCharacters] = useState(null)\n  useEffect(() => {\n    const getSupportingCharacters = async () => {\n      const { data } = await axios.get('/api/supporting_characters/')\n      setAllSupportingCharacters(data)\n    }\n    getSupportingCharacters()\n  }, [])\n\n\n  if (!allSupportingCharacters) return (\n    <Button disabled>\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    Loading...\n    </Button>\n  )\n\n\n  return (\n    <>\n      <h1 className='character-header background'>Supporting Characters</h1>\n      <CardColumns className='background'>\n        {allSupportingCharacters.map(character => {\n          return (\n            <CharacterCard characterType='supporting' key={character.id} character={character} />\n          )\n        })}\n      </CardColumns>\n\n    </>\n  )\n}\n\nexport default SupportingCharacterIndex\n","\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { setColourByNation } from '../../helpers/helperFunctions'\nimport BooksCarousel from '../books/BooksCarousel'\n\nconst GenreIndex = () => {\n  const [allGenres, setAllGenres] = useState(null)\n\n  useEffect(() => {\n    setColourByNation()\n    const getGenres = async () => {\n      const { data } = await axios.get('api/genres/')\n      setAllGenres(data)\n    }\n    getGenres()\n  },[])\n\n  if (!allGenres) return null\n  return (\n    <>\n      {allGenres\n        .sort((a, b) => {\n          const genreA = a.genre.toUpperCase()\n          const genreB = b.genre.toUpperCase()\n\n          return genreA < genreB ? -1\n            : genreA > genreB ? 1\n              : 0\n        })\n        .filter(item => item.books.length > 0)\n        .map(item => {\n          const { id, books, genre } = item\n          return (\n            <>\n              <div className=\"genre background\" key={id}>\n                <p className='character-header'>{genre}</p>\n                <div className=\"books-index-container background\">\n                  <BooksCarousel books={ books } />\n                </div>\n              </div>\n            </>\n          )\n        })}\n    </>\n  )\n}\n\nexport default GenreIndex","import './styles/main.scss'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Header from './components/sitePages/Header'\nimport HomePage from './components/sitePages/HomePage'\nimport Footer from './components/sitePages/Footer'\nimport Profile from './components/users/Profile'\nimport BookShow from './components/books/BookShow'\nimport BookIndex from './components/books/BookIndex'\nimport ProtagonistIndex from './components/characters/ProtagonistIndex'\nimport AntagonistIndex from './components/characters/AntagonistIndex'\nimport SupportingCharacterIndex from './components/characters/SupportingCharacterIndex'\nimport GenreIndex from './components/genres/GenreIndex'\n//#region imports\n\n\n\n//#endregion\n\nconst App = () => {\n\n  return (\n    <div className='browserRouter background'>\n      <BrowserRouter >\n        <Header/>\n        <Switch>\n          <Route exact path ='/'>\n            <HomePage/>\n          </Route>\n          <Route exact path ='/books'>\n            <BookIndex/>\n          </Route>\n          <Route exact path ='/books/:id'>\n            <BookShow/>\n          </Route>\n          <Route exact path ='/genres'>\n            <GenreIndex/>\n          </Route>\n          <Route exact path ='/protagonists'>\n            <ProtagonistIndex/>\n          </Route>\n          <Route exact path ='/antagonists'>\n            <AntagonistIndex/>\n          </Route>\n          <Route exact path ='/supporting_characters'>\n            <SupportingCharacterIndex />\n          </Route>\n          <Route exact path ='/profile'>\n            <Profile/>\n          </Route>\n        </Switch>\n        <Footer/>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}